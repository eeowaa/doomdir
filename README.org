#+TITLE:   DOOMDIR
#+DATE:    October 05, 2021
#+SINCE:   3.0.0-alpha
#+STARTUP: inlineimages nofold

* Table of Contents :TOC_3:noexport:
- [[#description][Description]]
  - [[#maintainers][Maintainers]]
  - [[#module-flags][Module Flags]]
    - [[#discussion][Discussion]]
  - [[#plugins][Plugins]]
  - [[#hacks][Hacks]]
- [[#prerequisites][Prerequisites]]
- [[#features][Features]]
  - [[#literate-configuration][Literate configuration]]
  - [[#doom-emacs-documentation][Doom Emacs documentation]]
- [[#configuration][Configuration]]
  - [[#finding-a-good-subtree-in-configorg-for-new-configuration][Finding a good subtree in =config.org= for new configuration]]
  - [[#local-configuration][Local configuration]]
- [[#troubleshooting][Troubleshooting]]
  - [[#finding-an-lsp-server-for-a-language][Finding an LSP server for a language]]
  - [[#trouble-with-tangling-source-blocks-from-configorg][Trouble with tangling source blocks from =config.org=]]

* Description
In Doom Emacs, one's private configuration directory is technically a module,
mostly (/but not quite exactly/) like any other module (e.g. =:lang org=), so
I've decided to document mine as such.

For more detailed information on how modules should be structured, see the
[[https://github.com/hlissner/doom-emacs/blob/HEAD/docs/getting_started.org#writing-your-own-modules][Writing your own modules]] section of Doom Emacs documentation.

** Maintainers
+ @eeowaa (Author)

** Module Flags
This module provides no flags.

*** Discussion
=DOOMDIR= can't really have module flags, since module flags are passed to
module declarations in the ~doom!~ block, which is contained in =DOOMDIR=
itself.

** Plugins
In addition to all the packages installed by enabled modules in [[file:init.el][init.el]], the
following packages are installed via ~package!~ forms in [[file:packages.el][packages.el]]:

+ UI
  + [[https://www.emacswiki.org/emacs/download/col-highlight.el][col-highlight]]
  + [[https://github.com/purcell/page-break-lines][page-break-lines]]
  + [[https://github.com/bmag/imenu-list][imenu-list]]
+ Languages
  + [[https://elpa.gnu.org/packages/sed-mode.html][sed-mode]]
  + [[https://github.com/john2x/jenkinsfile-mode][jenkinsfile-mode]]
  + [[https://github.com/ljos/jq-mode][jq-mode]]
  + [[https://github.com/emacsorphanage/applescript-mode][applescript-mode]] (=:os macos=)
  + [[http://github.com/stig/ob-applescript.el][ob-applescript]] (=:os macos=)
+ Documentation
  + [[https://depp.brause.cc/nov.el][nov]]
  + [[https://github.com/sensorflo/adoc-mode/wiki][adoc-mode]]
+ Kubernetes
  + [[https://github.com/TxGVNN/emacs-k8s-mode][k8s-mode]]
  + [[https://github.com/r0bobo/kubedoc.el/][kubedoc]]
  + [[https://github.com/abrochard/kubel][kubel]]
  + [[https://github.com/abrochard/kubel][kubel-evil]]
+ Music
  + [[https://github.com/Lautaro-Garcia/counsel-spotify][counsel-spotify]]
+ Weather
  + [[https://github.com/thomp/noaa][noaa]]

** Hacks
+ Overridden function definitions via ~:override~ advice in [[file:config.el][config.el]].
+ Overridden ~use-package!~ forms via ~use-package-hook!~ forms in [[file:early-init.el][early-init.el]].
+ Modified ~doom-*~ theme(s) in [[file:themes/][themes/]].

* Prerequisites
System-specific shell scripts to install prerequisites are tangled from
[[file:config.org][config.org]] into the [[file:install/][install/]] directory. The [[file:install/run][install/run]] script wraps all of
these and may be used on any supported system (currently macOS and Fedora):

#+begin_src sh
install/run
#+end_src

* Features
** Literate configuration
The following files are tangled from source blocks in [[file:config.org][config.org]]:

+ [[file:config.el][config.el]]
+ [[file:early-init.el][early-init.el]]
+ [[file:packages.el][packages.el]]
+ [[file:install][install/*]]
+ [[file:snippets][snippets/*]]

The following files are /not currently/ tangled from [[file:config.org][config.org]], but I have
plans to port their contents to a literate config:

+ [[file:init.el][init.el]]

All other files in =DOOMDIR= are probably "illiterate" for a reason; this is not
subject to change anytime soon.

** Doom Emacs documentation
See the [[file:docs][docs/]] directory for (/currently work-in-progress/) documentation I've
written about Doom Emacs usage.

* Configuration
** Finding a good subtree in =config.org= for new configuration
[[file:config.org][config.org]] has been organized to mirror the structure of [[file:init.el][init.el]], which in turn
mirrors the structure of =~/.emacs.d/modules=. Configuration for options, hooks,
etc. in =config.org= should be done in the subtree which corresponds to the Doom
module that performs configuration on related options, hooks, etc.

Use =SPC h d e= (~my/doom-help-search-source~) and =SPC h d M=
(~my/doom-help-search-modules~) to find the module that contains configuration
for (or in some cases, is at least /intended/ to contain configuration for) the
option, hook, etc. that you want to configure.

** Local configuration
=DOOMDIR/custom.el= is ignored by [[file:.gitignore][.gitignore]], so it is a good place to store
most local configuration. You can take a look at the [[file:config.org::*Load custom config if present]["Load custom config if present"]]
section of =config.org= for an idea of what to put in it.

All credentials should go in some authentication source available to the
=auth-source= library (check the ~auth-sources~ variable for what is configured
locally).

* Troubleshooting
** Finding an LSP server for a language
Look for ~lsp-dependency~ forms in the =lsp-mode= library, specifically under
=~/.emacs.d/.local/straight/repos/lsp-mode/clients/lsp-LANG.el= for a given
language. For example, =lsp-json.el= contains the following form:

#+begin_src emacs-lisp :tangle no
(lsp-dependency 'vscode-json-languageserver
                '(:system "vscode-json-language-server")
                '(:npm :package "vscode-langservers-extracted"
                       :path "vscode-json-language-server"))
#+end_src

What this says is that if there is a =vscode-json-language-server= executable in
your ~$PATH~, then use that. Otherwise, prompt the user to install the
~vscode-langservers-extracted~ package using ~npm~, which should install an
executable named =vscode-json-language-server= (the lack of an absolute path
means that the executable could be installed anywhere).

** Trouble with tangling source blocks from =config.org=
Are you having trouble tangling [[file:config.org][config.org]] via =C-c C-v C-t=
(~org-babel-tangle~)? Have you recently updated Doom Emacs using ~doom upgrade~?
Why don't you try =M-x pdf-tools-install= and try again? ðŸ˜ƒ
